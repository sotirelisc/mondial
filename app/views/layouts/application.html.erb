<!DOCTYPE html>
<html>
<head>
  <title>Mondial</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <script type="text/javascript" src="https://www.google.com/jsapi"></script>
  <script type="text/javascript">
    $('ul.nav').find('a').click(function() {
        var $href = $(this).attr('href');
        var $anchor = $('#'+$href).offset();
        $('body').animate({ scrollTop: $anchor.top }, 'slow');
        return false;
    });
  </script>
    <script type="text/javascript">

      // Load the Visualization API.
      google.load('visualization', '1.0', {
        'packages': ['corechart', 'map', 'bar']
      });

      // Set a callback to run when the Google Visualization API is loaded.
      google.setOnLoadCallback(function() {
        drawChart();
        drawMap();
        drawTitleSubtitle();
        drawHistogram();
      });

      function drawMap() {
        var data = google.visualization.arrayToDataTable([
          ['Country', 'Population'],
          ['China', 'China: 1,363,800,000'],
          ['India', 'India: 1,242,620,000'],
          ['US', 'US: 317,842,000'],
          ['Indonesia', 'Indonesia: 247,424,598'],
          ['Brazil', 'Brazil: 201,032,714'],
          ['Pakistan', 'Pakistan: 186,134,000'],
          ['Nigeria', 'Nigeria: 173,615,000'],
          ['Bangladesh', 'Bangladesh: 152,518,015'],
          ['Russia', 'Russia: 146,019,512'],
          ['Japan', 'Japan: 127,120,000']
        ]);

        var options = { showTip: true };

        var map = new google.visualization.Map(document.getElementById('maps_div'));

        map.draw(data, options);
      }

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Topping');
        data.addColumn('number', 'Slices');
        data.addRows([
          ['Mushrooms', 3],
          ['Onions', 1],
          ['Olives', 1],
          ['Zucchini', 1],
          ['Pepperoni', 2]
        ]);

        // Set chart options
        var options = {'title':'How Much Pizza I Ate Last Night',
                       'width':400,
                       'height':300};

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('pies_div'));
        chart.draw(data, options);
      }
      
      function drawTitleSubtitle() {
        var data = new google.visualization.DataTable();
        data.addColumn('timeofday', 'Time of Day');
        data.addColumn('number', 'Motivation Level');
        data.addColumn('number', 'Energy Level');
  
        data.addRows([
          [{v: [8, 0, 0], f: '8 am'}, 1, .25],
          [{v: [9, 0, 0], f: '9 am'}, 2, .5],
          [{v: [10, 0, 0], f:'10 am'}, 3, 1],
          [{v: [11, 0, 0], f: '11 am'}, 4, 2.25],
          [{v: [12, 0, 0], f: '12 pm'}, 5, 2.25],
          [{v: [13, 0, 0], f: '1 pm'}, 6, 3],
          [{v: [14, 0, 0], f: '2 pm'}, 7, 4],
          [{v: [15, 0, 0], f: '3 pm'}, 8, 5.25],
          [{v: [16, 0, 0], f: '4 pm'}, 9, 7.5],
          [{v: [17, 0, 0], f: '5 pm'}, 10, 10],
        ]);
  
        var options = {
          chart: {
            title: 'Motivation and Energy Level Throughout the Day',
            subtitle: 'Based on a scale of 1 to 10'
          },
          hAxis: {
            title: 'Time of Day',
            format: 'h:mm a',
            viewWindow: {
              min: [7, 30, 0],
              max: [17, 30, 0]
            }
          },
          vAxis: {
            title: 'Rating (scale of 1-10)'
          }
        };
  
        var material = new google.charts.Bar(document.getElementById('columns_div'));
        material.draw(data, options);
      }
      
      function drawHistogram() {
        var data = google.visualization.arrayToDataTable([
          ['Dinosaur', 'Length'],
          ['Acrocanthosaurus (top-spined lizard)', 12.2],
          ['Albertosaurus (Alberta lizard)', 9.1],
          ['Allosaurus (other lizard)', 12.2],
          ['Apatosaurus (deceptive lizard)', 22.9],
          ['Archaeopteryx (ancient wing)', 0.9],
          ['Argentinosaurus (Argentina lizard)', 36.6],
          ['Baryonyx (heavy claws)', 9.1],
          ['Brachiosaurus (arm lizard)', 30.5],
          ['Ceratosaurus (horned lizard)', 6.1],
          ['Coelophysis (hollow form)', 2.7],
          ['Compsognathus (elegant jaw)', 0.9],
          ['Deinonychus (terrible claw)', 2.7],
          ['Diplodocus (double beam)', 27.1],
          ['Dromicelomimus (emu mimic)', 3.4],
          ['Gallimimus (fowl mimic)', 5.5],
          ['Mamenchisaurus (Mamenchi lizard)', 21.0],
          ['Megalosaurus (big lizard)', 7.9],
          ['Microvenator (small hunter)', 1.2],
          ['Ornithomimus (bird mimic)', 4.6],
          ['Oviraptor (egg robber)', 1.5],
          ['Plateosaurus (flat lizard)', 7.9],
          ['Sauronithoides (narrow-clawed lizard)', 2.0],
          ['Seismosaurus (tremor lizard)', 45.7],
          ['Spinosaurus (spiny lizard)', 12.2],
          ['Supersaurus (super lizard)', 30.5],
          ['Tyrannosaurus (tyrant lizard)', 15.2],
          ['Ultrasaurus (ultra lizard)', 30.5],
          ['Velociraptor (swift robber)', 1.8]]);

        var options = {
          title: 'Lengths of dinosaurs, in meters',
          legend: { position: 'none' },
        };

        var chart = new google.visualization.Histogram(document.getElementById('histograms_div'));
        chart.draw(data, options);
      }

    </script>
  <style>
    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */
    .row.content {height: 550px}
    
    /* Set gray background color and 100% height */
    .sidenav {
      background-color: #f1f1f1;
      height: 100%;
    }
    
    /* On small screens, set height to 'auto' for the grid */
    @media screen and (max-width: 767px) {
      .row.content {height: auto;} 
    }
  </style>
</head>
<body>
<nav class="navbar navbar-inverse visible-xs">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>                        
      </button>
      <a class="navbar-brand" href="#">Mondial</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <li class="active"><a href="#">Pies</a></li>
        <li><a href="#">Maps</a></li>
        <li><a href="#">Columns</a></li>
        <li><a href="#">Histograms</a></li>
      </ul>
    </div>
  </div>
</nav>

<div class="container-fluid">
  <div class="row content">
    <div class="col-sm-3 sidenav hidden-xs">
      <h2>Mondial</h2>
      <ul class="nav nav-pills nav-stacked">
        <li class="active"><a href="#section1">Pies</a></li>
        <li><a href="#maps">Maps</a></li>
        <li><a href="#columns">Columns</a></li>
        <li><a href="#histograms">Histograms</a></li>
      </ul><br>
    </div>
    <br>
    <%= yield %>
  </div>
</div>
</body>
</html>
